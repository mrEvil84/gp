<?php

namespace Gosia\GosiaPageBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * IssueRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class IssueRepository extends EntityRepository
{
	/**
	 * Find all with Paginator
	 * @param $countryId
	 */
	public function findByAllWithPaginator($offset, $limit)
	{
		$qb = $this->createQueryBuilder('i')
		->setFirstResult($offset)
		->setMaxResults($limit)
		->getQuery();
		return new Paginator($qb);
	}
	
	public function findByAllLastDate($offset, $limit) 
	{
		$qb = $this->createQueryBuilder('i')
		->setFirstResult($offset)
		->setMaxResults($limit)
		->orderBy('i.postedAt', 'DESC')
		->getQuery();
		return new Paginator($qb);
	}
	
	
    public function findBySearchCostKeyword($searchKeyword, $offset, $limit) {
    	
    	$qb = $this->createQueryBuilder('i');
    	$qb->setFirstResult($offset);
    	$qb->setMaxResults($limit);
    	$qb->orderBy('i.postedAt', 'DESC');
    	$qb->where('i.id = :id');
    	$qb->orWhere($qb->expr()->like('i.name', ':name'));
    	$qb->orWhere($qb->expr()->like('i.surname', ':surname'));
    	$qb->orWhere($qb->expr()->like('i.email', ':email'));
    	$qb->orWhere($qb->expr()->like('i.street', ':street'));
    	$qb->orWhere($qb->expr()->like('i.cityZipCode', ':cityZipCode'));
    	$qb->orWhere($qb->expr()->like('i.fileName', ':fileName'));
    	$qb->orWhere($qb->expr()->like('i.originalFileName', ':originalFileName'));
    	
    	$qb->setParameter('id', intval($searchKeyword));
    	$qb->setParameter('name', '%'.$searchKeyword.'%');
    	$qb->setParameter('surname', '%'.$searchKeyword.'%');
    	$qb->setParameter('email', '%'.$searchKeyword.'%');
    	$qb->setParameter('street', '%'.$searchKeyword.'%');
    	$qb->setParameter('cityZipCode', '%'.$searchKeyword.'%');
    	$qb->setParameter('fileName', '%'.$searchKeyword);
    	$qb->setParameter('originalFileName', '%'.$searchKeyword.'%');
    	
   	
    	$qb->getQuery();
    	
    	return new Paginator($qb);
    }
    
}
